openapi: 3.1.0

info:
  title: IETF BibXML service — compatibility API
  description: |
    These are APIs for compatibility with existing third-party systems during the migration period.
  contact:
    email: ietf-ribose@ribose.com
  license:
    name: BSD 3-Clause
    url: https://github.com/ietf-ribose/bibxml-service/blob/main/LICENSE
  version: {{ snapshot }}

servers:
- url: /

paths:

  /public/rfc/{directory_name}/{filename}.xml:
    parameters:
    - name: directory_name
      in: path
      description: Directory name, as per xml2rfc web server’s content.
      required: true
      schema:
        type: string
        example: bibxml4
    - name: filename
      in: path
      description: Filename, as per xml2rfc web server’s content. Typically starts with “reference” or “_reference”.
      required: true
      schema:
        example: reference.W3C.NOTE-XML-FRAG-REQ-19981123
        type: string
    - name: anchor
      in: query
      description: |
        Replace the `anchor` in *top-level* `<reference>` or `<referencegroup>`
        to specified string.

        NOTE: Does not affect any of the nested `<reference>` elements.
      required: true
      schema:
        type: string

    get:
      summary: Get bibliographic item by xml2rfc tools path
      description: |
        This endpoint returns raw XML response.
        Returned bibliographic item is either obtained from a Relaton source,
        or (if impossible to locate given anchor, and xml2rfc data is indexed)
        from xml2rfc snapshot.
      responses:

        200:
          description: successful operation
          content:
            application/xml:
              schema:
                type: string

        404:
          description: reference not found. (At this time, there may be false negatives)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

        500:
          description: error retrieving or serializing item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:

  schemas:

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              description: Code for automatic error processing
            message:
              type: string
              description: Human readable error message
