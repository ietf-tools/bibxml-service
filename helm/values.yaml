# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: "ghcr.io/ietf-tools/bibxml-service"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  #tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000
  targetPort: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

env:
  - name: PRIMARY_HOSTNAME
    value: "bib.ietf.org"
  - name: INTERNAL_HOSTNAMES
    value: "locahost, 127.0.0.1"
  - name: DEBUG
    value: "0"
  - name: SOURCE_REPO_URL
    value: "https://github.com/ietf-tools/"
  - name: DJANGO_SECRET
    value: "SomeLongRandomString"
  - name: API_SECRET
    value: "ItsASecret"
  - name: EXTRA_API_SECRETS
    value: "ItsASecret"
  - name: DB_HOST
    value: "HOSTNAMEHERE"
  - name: DB_PORT
    value: "5432"
  - name: DB_USER
    value: "bibxml"
  - name: DB_NAME
    value: "bibxml"
  - name: DB_SECRET
    value: "bibxml"
  - name: SERVICE_NAME
    value: "IETF BibXML Service"
  - name: CONTACT_EMAIL
    value: "tools-help@ietf.org"
  - name: SERVER_EMAIL
    value: "support@ietf.org"
  - name: SENTRY_DSN
    value: ""
  - name: MATOMO_URL
    value: "analytics.ietf.org"
  - name: MATOMO_SITE_ID
    value: ""
  - name: MATOMO_TAG_MANAGER_CONTAINER
    value: ""
  - name: DATATRACKER_CLIENT_ID
    value: "0"
  - name: DATATRACKER_CLIENT_SECRET
    value: "0"
  - name: PYTHONUNBUFFERED
    value: "1"
  - name: DATASET_TMP_ROOT
    value: "/data/datasets"
  - name: CELERY_BROKER_URL
    value: "redis://localhost:6379"
  - name: CELERY_RESULT_BACKEND
    value: "redis://localhost:6379"
  - name: REDIS_HOST
    value: "localhost"
  - name: REDIS_PORT
    value: "6379"
  - name: AUTO_REINDEX_INTERVAL
    value: "5400"
  - name: SNAPSHOT
    value: "{{ .Chart.AppVersion }}"
  - name: PORT
    value: "8000"
