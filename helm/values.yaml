# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: "ghcr.io/ietf-tools/bibxml-service"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  #tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000
  targetPort: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

env:
  PRIMARY_HOSTNAME: "bib.ietf.org"
  INTERNAL_HOSTNAMES: "locahost, 127.0.0.1"
  DEBUG: "0"
  SOURCE_REPO_URL: "https://github.com/ietf-tools/"
  DJANGO_SECRET: "SomeLongRandomString"
  API_SECRET: "ItsASecret"
  EXTRA_API_SECRETS: "ItsASecret"
  DB_HOST: "HOSTNAMEHERE"
  DB_PORT: "5432"
  DB_USER: "bibxml"
  DB_NAME: "bibxml"
  DB_SECRET: "bibxml"
  SERVICE_NAME: "IETF BibXML Service"
  CONTACT_EMAIL: "tools-help@ietf.org"
  SERVER_EMAIL: "support@ietf.org"
  SENTRY_DSN: ""
  MATOMO_URL: "analytics.ietf.org"
  MATOMO_SITE_ID: ""
  MATOMO_TAG_MANAGER_CONTAINER: ""
  DATATRACKER_CLIENT_ID: "0"
  DATATRACKER_CLIENT_SECRET: "0"
  PYTHONUNBUFFERED: "1"
  DATASET_TMP_ROOT: "/data/datasets"
  CELERY_BROKER_URL: "redis://localhost:6379"
  CELERY_RESULT_BACKEND: "redis://localhost:6379"
  REDIS_HOST: "localhost"
  REDIS_PORT: "6379"
  AUTO_REINDEX_INTERVAL: "5400"
  SNAPSHOT: "{{ .Chart.AppVersion }}"
  PORT: "8000"